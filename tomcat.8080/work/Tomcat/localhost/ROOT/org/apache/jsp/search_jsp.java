/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.45
 * Generated at: 2024-03-12 04:52:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;

public final class search_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/meta.jsp", out, false);
      out.write("\n");
      out.write("  <title>Patient Data App</title>\n");
      out.write("  <style>\n");
      out.write("    body {\n");
      out.write("      font-family: 'Courier New', monospace;\n");
      out.write("      margin: 10px;\n");
      out.write("      padding: 0;\n");
      out.write("      /*display: flex;*/\n");
      out.write("      /*color: #FFFFFF;*/\n");
      out.write("      /*justify-content: center;*/\n");
      out.write("      /*align-items: center;*/\n");
      out.write("      /*height: 100vh;*/\n");
      out.write("    }\n");
      out.write("    h1 {\n");
      out.write("      color: #0b0d40;\n");
      out.write("      font-size: 36px;\n");
      out.write("      letter-spacing: 2px;\n");
      out.write("      margin-bottom: 50px;\n");
      out.write("      text-align: center;\n");
      out.write("    }\n");
      out.write("    h2 {\n");
      out.write("      color: #0b0d40;\n");
      out.write("      font-size: 24px;\n");
      out.write("      letter-spacing: 2px;\n");
      out.write("      margin-bottom: 10px;\n");
      out.write("    }\n");
      out.write("    form {\n");
      out.write("      margin-top: 20px;\n");
      out.write("    }\n");
      out.write("    table {\n");
      out.write("      border: 2px solid black; /* Adjusted border thickness */\n");
      out.write("      border-collapse: collapse;\n");
      out.write("      margin-left: auto;\n");
      out.write("      margin-right: auto; /* Center table on the page */\n");
      out.write("      width: 100%; /* Adjust as needed */\n");
      out.write("    }\n");
      out.write("    th, td {\n");
      out.write("      border: 1px solid black;\n");
      out.write("      padding: 5px;\n");
      out.write("      text-align: center; /* Center text within cells */\n");
      out.write("    }\n");
      out.write("    th {\n");
      out.write("      background-color: #f2f2f2; /* Light grey background for header */\n");
      out.write("    }\n");
      out.write("    .back-button {\n");
      out.write("      display: inline-block;\n");
      out.write("      background-color: #b3cde0;\n");
      out.write("      color: #0b0d40;\n");
      out.write("      font-size: 18px;\n");
      out.write("      padding: 15px 30px;\n");
      out.write("      text-decoration: none;\n");
      out.write("      border-radius: 50px;\n");
      out.write("      margin-right: 20px;\n");
      out.write("      transition: background-color 0.3s ease;\n");
      out.write("      border: none;\n");
      out.write("      cursor: pointer;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .back-button:hover {\n");
      out.write("      background-color: #6497b1;\n");
      out.write("    }\n");
      out.write("    label {\n");
      out.write("      display: block;\n");
      out.write("      color: #FFFFFF;\n");
      out.write("      margin-bottom: 5px;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    input[type=\"text\"], input[type=\"number\"], select {\n");
      out.write("      width: 100%;\n");
      out.write("      padding: 10px;\n");
      out.write("      font-size: 16px;\n");
      out.write("      border-radius: 5px;\n");
      out.write("      border: 1px solid #333;\n");
      out.write("      background-color: #b3cde0;\n");
      out.write("      color: #0F0F0F;\n");
      out.write("      margin-bottom: 20px;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    input[type=\"text\"], input[type=\"number\"]::placeholder {\n");
      out.write("      color: #005b96;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    ::-webkit-input-placeholder { /* WebKit browsers */\n");
      out.write("      color: #005b96;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    input[type=\"submit\"] {\n");
      out.write("      background-color:#b3cde0;\n");
      out.write("      color: #0F0F0F;\n");
      out.write("      font-size: 18px;\n");
      out.write("      padding: 15px 30px;\n");
      out.write("      text-decoration: none;\n");
      out.write("      border-radius: 50px;\n");
      out.write("      border: none;\n");
      out.write("      cursor: pointer;\n");
      out.write("      transition: background-color 0.3s ease;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    input[type=\"submit\"]:hover {\n");
      out.write("      background-color: #6497b1;\n");
      out.write("    }\n");
      out.write("  </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/header.jsp", out, false);
      out.write("\n");
      out.write("<div class=\"main\">\n");
      out.write("  <a href=\"#\" onclick=\"history.back()\" class=\"back-button\">Back to Previous Page</a>\n");
      out.write("  <form method=\"GET\" action=\"search.html\">\n");
      out.write("    <input type=\"text\" name=\"search_string\" placeholder=\"Enter search keyword here\"/>\n");
      out.write("    <input type=\"submit\" value=\"Search\"/>\n");
      out.write("  </form>\n");
      out.write("  <table>\n");
      out.write("    <tr>\n");
      out.write("      <th>ID</th><th>BIRTHDATE</th><th>DEATHDATE</th><th>SSN</th><th>DRIVERS</th><th>PASSPORT</th>\n");
      out.write("      <th>PREFIX</th><th>FIRST</th><th>LAST</th><th>SUFFIX</th><th>MAIDEN</th><th>MARITAL</th>\n");
      out.write("      <th>RACE</th><th>ETHNICITY</th><th>GENDER</th><th>BIRTHPLACE</th><th>ADDRESS</th>\n");
      out.write("      <th>CITY</th><th>STATE</th><th>ZIP</th>\n");
      out.write("    </tr>\n");
      out.write("    ");

      List<List<String>> table = (List<List<String>>) request.getAttribute("searchResults");
      if (table != null && !table.isEmpty()) {
        int numRows = table.get(0).size(); // Assuming all columns have the same number of rows
        for (int row = 0; row < numRows; row++) {
    
      out.write("\n");
      out.write("    <tr>\n");
      out.write("      ");

        for (List<String> column : table) {
          String cellValue = column.size() > row ? column.get(row) : "";
      
      out.write("<td>");
      out.print( cellValue );
      out.write("</td>");

      }
    
      out.write("\n");
      out.write("    </tr>\n");
      out.write("    ");

        }
      }
    
      out.write("\n");
      out.write("  </table>\n");
      out.write("\n");
      out.write("  ");
      out.write('\n');
      out.write(' ');
      out.write(' ');
      out.write('\n');
      out.write(' ');
      out.write(' ');
      out.write('\n');
      out.write(' ');
      out.write(' ');
      out.write('\n');
      out.write(' ');
      out.write(' ');
      out.write('\n');
      out.write(' ');
      out.write(' ');
      out.write('\n');
      out.write(' ');
      out.write(' ');
      out.write('\n');
      out.write(' ');
      out.write(' ');
      out.write('\n');
      out.write(' ');
      out.write(' ');
      out.write('\n');
      out.write(' ');
      out.write(' ');
      out.write('\n');
      out.write(' ');
      out.write(' ');
      out.write('\n');
      out.write(' ');
      out.write(' ');
      out.write('\n');
      out.write(' ');
      out.write(' ');
      out.write('\n');
      out.write(' ');
      out.write(' ');
      out.write('\n');
      out.write(' ');
      out.write(' ');
      out.write('\n');
      out.write(' ');
      out.write(' ');
      out.write('\n');
      out.write(' ');
      out.write(' ');
      out.write('\n');
      out.write(' ');
      out.write(' ');
      out.write('\n');
      out.write(' ');
      out.write(' ');
      out.write('\n');
      out.write(' ');
      out.write(' ');
      out.write('\n');
      out.write(' ');
      out.write(' ');
      out.write('\n');
      out.write(' ');
      out.write(' ');
      out.write('\n');
      out.write(' ');
      out.write(' ');
      out.write("\n");
      out.write("</div>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/footer.jsp", out, false);
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
